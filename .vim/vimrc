filetype plugin indent on
syntax enable

""" encoding
set encoding=utf-8
set fileencodings=utf-8,iso-2022-jp,sjis,euc-jp

""" indent
set smartindent

""" tab
set expandtab
set shiftwidth=2
set softtabstop=2
set tabstop=2

""" search
set hlsearch
set ignorecase
set incsearch
set nowrapscan
set smartcase

""" misc
set noexrc
set history=100
set formatoptions=tcqr
set backspace=indent,eol,start
set tags=./tags
set whichwrap=b,s
"set modelines=2

""" ui
set background=dark
set number
set scrolloff=5
set showmatch
set splitbelow
set splitright
set wildmenu
set cursorline

""" highlight
highlight Search ctermbg=cyan ctermfg=black
highlight Pmenu ctermbg=white ctermfg=black
highlight PmenuSel ctermbg=blue ctermfg=black

""" highlight (vimdiff)
highlight DiffAdd ctermfg=black ctermbg=2
highlight DiffChange ctermfg=black ctermbg=3
highlight DiffDelete ctermfg=black ctermbg=6
highlight DiffText ctermfg=black ctermbg=7

""" key-mappings
nnoremap <Esc><Esc> :nohlsearch<CR>
nnoremap <C-l> zz
inoremap <C-a> <ESC><S-i>
inoremap <C-e> <ESC><S-a>
inoremap <C-l> <ESC>
inoremap <C-o> <ESC>o
onoremap ) t)
onoremap ( t(
let mapleader = ','

""" filetype
autocmd BufReadPost *.kt setlocal filetype=kotlin

""" vim-plug
call plug#begin('~/.vim/plugged')
Plug 'vim-scripts/taglist.vim'
Plug 'preservim/nerdtree'
Plug 'mattn/emmet-vim'
Plug 'mattn/webapi-vim'
Plug 'udalov/kotlin-vim'
call plug#end()

""" NERDTree
map <C-n>t :NERDTreeToggle<CR>
map <C-n>c :NERDTreeCWD<CR>

""" emmet-vim
let g:user_emmet_settings = webapi#json#decode(join(readfile(expand('~/.vim/snippets/emmet/snippets.json')), "\n"))
autocmd FileType html imap <buffer><expr><tab>
  \ emmet#isExpandable() ? "\<plug>(emmet-expand-abbr)" : "\<tab>"
